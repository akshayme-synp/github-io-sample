name: "Synopsys Intelligent Security Scan"

on:
  push:
   branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
    
    - name: Synopsys Intelligent Security Scan
      id: prescription
      uses: akshayme-synp/intelligent-security-scan@try-branch
      env:
        persona: devsecops
        release_type: minor
        manifest_type: json
      with:
        ioServerUrl: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        workflowVersion: 2021.12.2
        additionalWorkflowArgs: --slack.channel.id=${{secrets.SLACK_CHANNEL_ID}} --slack.token=${{secrets.SLACK_TOKEN}} --persona=$persona --release.type=$release_type --manifest_type=$manifest_type --github.token=${{secrets.SCM_ACCESS_TOKEN}} --polaris.project.name="sig-devsecops/github-io-sample" --polaris.url=${{secrets.POLARIS_SERVER_URL}} --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}}
        stage: "IO"    
    
    # Please note that the ID in previous step was set to prescription
    # in order for this logic to work also make sure that POLARIS_ACCESS_TOKEN
    # is defined in settings
    - name: Static Analysis with Polaris
      if: ${{steps.prescription.outputs.sastScan == 'true' }}
      run: |
          export POLARIS_SERVER_URL=${{ secrets.POLARIS_SERVER_URL}}
          export POLARIS_ACCESS_TOKEN=${{ secrets.POLARIS_ACCESS_TOKEN}}
          wget -q ${{ secrets.POLARIS_SERVER_URL}}/api/tools/polaris_cli-linux64.zip
          unzip -j polaris_cli-linux64.zip -d /tmp
          /tmp/polaris analyze -w
    
#     # Please note that the ID in previous step was set to prescription
#     # in order for this logic to work
#     - name: Software Composition Analysis with Black Duck
#       if: ${{steps.prescription.outputs.scaScan == 'true' }}
#       uses: blackducksoftware/github-action@v2
#       with:
#          args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_TOKEN}}" --detect.tools="SIGNATURE_SCAN,DETECTOR"'
    
    - name: Synopsys Intelligent Security Scan
      if: ${{ steps.prescription.outputs.sastScan == 'true' || steps.prescription.outputs.scaScan == 'true' }}
      uses: akshayme-synp/intelligent-security-scan@try-branch
      env:
        persona: devsecops
        release_type: minor
        manifest_type: json
      with:
        ioServerUrl: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        workflowVersion: 2021.12.2
        additionalWorkflowArgs: --slack.channel.id=${{secrets.SLACK_CHANNEL_ID}} --slack.token=${{secrets.SLACK_TOKEN}} --persona=$persona --release.type=$release_type --manifest_type=$manifest_type --github.token=${{secrets.SCM_ACCESS_TOKEN}} --polaris.project.name="sig-devsecops/github-io-sample" --polaris.url=${{secrets.POLARIS_SERVER_URL}} --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}} --IS_SAST_ENABLED=${{steps.prescription.outputs.sastScan}} --IS_SCA_ENABLED=${{steps.prescription.outputs.scaScan}} --IS_DAST_ENABLED=false
        stage: "WORKFLOW"
    
#     - name: Upload SARIF file
#       if: ${{steps.prescription.outputs.sastScan == 'true' }}
#       uses: github/codeql-action/upload-sarif@v1
#       with:
#         # Path to SARIF file relative to the root of the repository
#         sarif_file: workflowengine-results.sarif
