name: "Try powershell"

on:
  push:
   branches: [ master ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.
        
    - name: Run powershell
      shell: pwsh
      id: prescription
      run: |
        Invoke-WebRequest https://raw.githubusercontent.com/akshayme-synp/insecure-bank/master/prescription.ps1 -SkipHttpErrorCheck -OutFile 'prescription.ps1' -PassThru
        .\prescription.ps1 -stage 'io' `
          -io_url '${{secrets.IO_SERVER_URL}}' `
          -io_token '${{secrets.IO_SERVER_TOKEN}}' `
          -project_name 'akshayme-synp/github-io-sample' `
          -scm_type 'github' `
          -scm_owner 'akshayme-synp' `
          -scm_repo_name 'github-io-sample' `
          -scm_branch_name 'master' `
          -github_username 'akshayme-synp' `
          -github_access_token '${{secrets.SCM_ACCESS_TOKEN}}' `
          -gitlab_url 'https://www.gitlab.com' `
          -gitlab_token '' `
          -persona 'developer' `
          -release_type 'major' `
          -polaris_project_name 'akshayme-synp/github-io-sample' `
          -polaris_server_url '${{secrets.POLARIS_SERVER_URL}}' `
          -polaris_access_token '${{secrets.POLARIS_ACCESS_TOKEN}}' `
          -is_sast_enabled 'true'
        $jsonResponse = Get-Content result.json | ConvertFrom-Json
        $is_Sast_Enabled = $jsonResponse.security.activities.sast.enabled
        echo "::set-output name=sastScan::$is_Sast_Enabled"

    - name: Check outputs
      shell: pwsh
      run: echo ${{ steps.prescription.outputs.sastScan }}
      
      
    - name: Incremental Static Analysis with Polaris
      if: ${{steps.prescription.outputs.sastScan == 'true' }}
      run: |      
          git diff --name-only --diff-filter=AM ${{ github.event.before }} ${{ github.sha }} > polaris-files-to-scan.txt
          echo "Files Changed -->"
          cat polaris-files-to-scan.txt
          export POLARIS_SERVER_URL=${{ secrets.POLARIS_SERVER_URL}}
          export POLARIS_ACCESS_TOKEN=${{ secrets.POLARIS_ACCESS_TOKEN}}
          export POLARIS_FF_ENABLE_COVERITY_INCREMENTAL=true
          wget -q ${{ secrets.POLARIS_SERVER_URL}}/api/tools/polaris_cli-linux64.zip
          unzip -j polaris_cli-linux64.zip -d /tmp
          /tmp/polaris analyze -w --incremental polaris-files-to-scan.txt
