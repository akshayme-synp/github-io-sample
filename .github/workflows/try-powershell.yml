name: "Try powershell"

on:
  push:
   branches: [ master ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.
        
    - name: Synopsys Intelligent Security Scan
      uses: akshayme-synp/intelligent-security-scan@try-powershell
      env:
        persona: devsecops
        release_type: minor
      with:
        ioServerUrl: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        workflowVersion: 2021.12.2
        additionalWorkflowArgs: -persona '$persona' -release_type '$release_type' -github.token '${{secrets.SCM_ACCESS_TOKEN}}' -polaris_server_url '${{secrets.POLARIS_SERVER_URL}}' -polaris_access_token '${{secrets.POLARIS_ACCESS_TOKEN}}'
        stage: "io"
        
    - name: Run powershell
      shell: pwsh
      id: prescription
      run: |
        Invoke-WebRequest https://raw.githubusercontent.com/akshayme-synp/insecure-bank/master/prescription.ps1 -SkipHttpErrorCheck -OutFile 'prescription.ps1' -PassThru
        .\prescription.ps1 -stage 'io' `
          -io_url '${{secrets.IO_SERVER_URL}}' `
          -io_token '${{secrets.IO_SERVER_TOKEN}}' `
          -project_name 'akshayme-synp/insecure-bank' `
          -scm_type 'github' `
          -scm_owner 'akshayme-synp' `
          -scm_repo_name 'insecure-bank' `
          -scm_branch_name 'master' `
          -github_username 'akshayme-synp' `
          -github_access_token '${{secrets.SCM_ACCESS_TOKEN}}' `
          -gitlab_url 'https://www.gitlab.com' `
          -gitlab_token '' `
          -persona 'developer' `
          -release_type 'minor' `
          -polaris_project_name 'akshayme-synp/insecure-bank' `
          -polaris_server_url '${{secrets.POLARIS_SERVER_URL}}' `
          -polaris_access_token '${{secrets.POLARIS_ACCESS_TOKEN}}' `
          -is_sast_enabled 'true'
        $jsonResponse = Get-Content result.json | ConvertFrom-Json
        $is_Sast_Enabled = $jsonResponse.security.activities.sast.enabled
        echo "::set-output name=is_Sast_Enabled::$is_Sast_Enabled"

    - name: Check outputs
      shell: pwsh
      run: echo ${{ steps.prescription.outputs.is_Sast_Enabled }}
